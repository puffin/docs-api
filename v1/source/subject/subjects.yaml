  /subject/subjects:
    post:
      tags:
        - 2. subjects
      summary: Create a subject
      description: |
        Create a new subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |

      parameters:
        - name: subject
          in: body
          description: The subject to create.
          schema:
            $ref: '#/definitions/Subject-SubjectObject'
      responses:
        '201':
          description: Subject creation successful
          schema:
            $ref: '#/definitions/Subject-Subject'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  /subject/subjects/{sid}:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string

    get:
      tags:
        - 2. subjects
      summary: Get a subject
      description: |
        Get a single subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Subject retrieval successful
          schema:
            $ref: '#/definitions/Subject-Subject'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
    put:
      tags:
        - 2. subjects
      summary: Update a subject
      description: |
        Update a subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | cant_update_subject | Authenticated user does not have permission to update this subject. |
      parameters:
        - name: subject
          in: body
          description: The subject to update.
          schema:
            type: object
            properties:
              name:
                description: The subject name.
                type: string
              description:
                description: The subject description.
                type: string
              attributes:
                description: |
                  An optional string metadata field that can be use to store any data you wish.
                  The string value must contain structurally valid JSON if specified.
                  Note that this will always be null for resources returned via LIST GET operations,
                  but will be present for single GET.
                type: string
      responses:
        '200':
          description: Subject update successful
          schema:
            $ref: '#/definitions/Subject-Subject'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /subject/subjects/{sid}/invite:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string
    post:
      tags:
        - 2. subjects
      summary: Add user to subject
      description: |
        Invite a user to a subject.

        Valid user roles are `admin` or `member`.

        #### Permissions
        Must have the `admin` role on the subject to invite users to subject with a specific
        role.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | user_not_found | Value passed for `user` was invalid. |
        | cant_invite_self | Authenticated user cannot invite themselves to a subject. |
        | not_in_subject | Authenticated user is not in the subject. |
        | already_in_subject | Invited user is already in the subject. |
        | cant_invite | User cannot be invited to this subject. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              user_sid:
                description: The user unique identifier.
                type: string
              role:
                description: The user role for this subject.
                type: string
                default: member
                enum:
                  - admin
                  - member
      responses:
        '200':
          description: Subject member creation successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /subject/subjects/{sid}/kick:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string
    delete:
      tags:
        - 2. subjects
      summary: Remove user from subject
      description: |
        Remove a user from a subject.

        #### Permissions
        Must have the `admin` role on the subject to remove users from subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | user_not_found | Value passed for `user` was invalid. |
        | cant_kick_self | Authenticated user cannot kick themselves from a subject. |
        | not_in_subject | User is not in the subject. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              user_sid:
                description: The user unique identifier.
                type: string
      responses:
        '200':
          description: subject member deletion successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /subject/subjects/{sid}/join:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string
    post:
      tags:
        - 2. subjects
      summary: Join a subject
      description: |
        User join a subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | user_not_found | Value passed for `user` was invalid. |
        | already_in_subject | User is already member of the subject. |
        | not_in_subject | User is not in the subject. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Subject join successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /subject/subjects/{sid}/leave:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string
    delete:
      tags:
        - 2. subjects
      summary: Leave a subject
      description: |
        User leave a subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | not_in_subject | User is not in the subject. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Subject leave successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /subject/subjects/{sid}/link:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string
    post:
      tags:
        - 2. subjects
      summary: Link a subject
      description: |
        Link two subjects together.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | already_linked | Subjects are already linked together. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | cant_link_subject | Authenticated user does not have permission to link this subject. |
      parameters:
        - name: subject
          in: body
          description: The subject to link to.
          schema:
            $ref: '#/definitions/Subject-SubjectLinkObject'
      responses:
        '200':
          description: Subject link successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    delete:
      tags:
        - 2. subjects
      summary: Unlink a subject
      description: |
        Unlink two subjects.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | not_linked | Subjects are not linked together. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | cant_unlink_subject | Authenticated user does not have permission to unlink this subject. |
      parameters:
        - name: subject
          in: body
          description: The subject to unlink from.
          schema:
            $ref: '#/definitions/Subject-SubjectLinkObject'
      responses:
        '200':
          description: Subject unlink successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
