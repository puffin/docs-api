swagger: '2.0'
info:
  version: 1.0.0
  title: Reach API Reference
  description: Reach API Specification cover all microservices and microapps endpoints.
  contact:
    email: dev@rea.ch
  x-logo:
    url: "http://api-docs.rea.ch/static/rea.ch-logo-black.png"
    backgroundColor: "#fafafa"
basePath: /v1/
host: api.rea.ch
tags:
  - name: introduction
    description: |
      The Reach Web API allows components and clients to interact with the reach ecosystem.
  - name: basics
    description: |
      All methods must be called using HTTPS. Arguments can be passed as GET or POST params, or a mix.
      The response contains a JSON object, which will always contain a top-level boolean property
      `ok`, indicating success or failure. For failure results, the `error` property will contain a
      short machine-readable error code.

      ```
      {
        "ok": true,
        "stuff": "This is good"
      }
      ```
      ```
      {
        "ok": false,
        "error": "something_bad"
      }
      ```
  - name: authentication
    description: |
      Authenticate your Web API requests by providing a bearer token, which identifies a single user.

      JSON Web Token (JWT) should be passed in all Web API calls as a parameter called `token`.

  - name: 3. conversations
    description: |
      The Conversation resource of Chat represents a "chat room" - a scope in which
      Messages can be sent and received. Users can be added or invited to join conversations.
  - name: 3. messages
    description: |
      The Message resource of Chat represents a single message within a Conversation.

      Posting to the Messages resource of a Conversation allows you to send messages to the Conversation via the REST API on behalf of a user.
  - name: 3. users
    description: |
      The User resource of Chat represents a unique identity interacting with the service.

  - name: 1. events
    description: |
      The Microapp inbox provide an interface to retrieve Inbox events.

      Inbox events are comprised of notification events, conversation events, and subject events.

  - name: 4. notifications
    description: |
      The Notification resource of the Notify service represents a notification to be sent to registered Bindings.

      Currently the following channels are supported:
      * APNS for iOS devices
      * Inbox service

  - name: 4. bindings
    description: |
      The Binding resource binds a User to its Address. Addresses are different per channel.
      For instance, for iOS push notifications the address is an APNS device token,
      and for inbox it's the User unique identifier. Creating a Binding for an Identity and Address
      allows to send notifications to an identity rather than a specific device.

  - name: 2. subjects
    description: |
      The Subject resource.
  - name: 2. users
    description: |
      The User resource of Subject represents a unique identity interacting with the service.
x-tagGroups:
  - name: Introduction
    tags:
      - introduction
  - name: Standard Features
    tags:
      - basics
      - authentication
  - name: 1. Inbox Service
    tags:
      - 1. events
  - name: 2. Subject Service
    tags:
      - 2. subjects
      - 2. users
  - name: 3. Chat Service
    tags:
      - 3. conversations
      - 3. messages
      - 3. users
  - name: 4. Notify Service
    tags:
      - 4. notifications
      - 4. bindings
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
responses:
  'Forbidden':
    description: Do not have appropriate permissions
    schema:
      $ref: '#/definitions/AppError'
  'Unauthorized':
    description: No access token provided
    schema:
      $ref: '#/definitions/AppError'
  'BadRequest':
    description: Invalid or missing parameters in URL or request body
    schema:
      $ref: '#/definitions/AppError'
  'NotFound':
    description: Resource not found
    schema:
      $ref: '#/definitions/AppError'
parameters:
  page:
    name: page
    in: query
    description: The page to select.
    default: 0
    type: integer
  page_size:
    name: page_size
    in: query
    description: The number of messages per page.
    default: 50
    type: integer
paths:
