swagger: '2.0'
info:
  version: 1.0.0
  title: Reach API Reference
  description: Reach API Specification cover all microservices and microapps endpoints.
  contact:
    email: dev@rea.ch
  x-logo:
    url: "http://api-docs.rea.ch/static/rea.ch-logo-black.png"
    backgroundColor: "#fafafa"
basePath: /v1/
host: api.rea.ch
tags:
  - name: introduction
    description: |
      The Reach Web API allows components and clients to interact with the reach ecosystem.
  - name: basics
    description: |
      All methods must be called using HTTPS. Arguments can be passed as GET or POST params, or a mix.
      The response contains a JSON object, which will always contain a top-level boolean property
      `ok`, indicating success or failure. For failure results, the `error` property will contain a
      short machine-readable error code.

      ```
      {
        "ok": true,
        "stuff": "This is good"
      }
      ```
      ```
      {
        "ok": false,
        "error": "something_bad"
      }
      ```
  - name: authentication
    description: |
      Authenticate your Web API requests by providing a bearer token, which identifies a single user.

      JSON Web Token (JWT) should be passed in all Web API calls as a parameter called `token`.

  - name: conversations
    description: |
      The Conversation resource of Chat represents a "chat room" - a scope in which
      Messages can be sent and received. Users can be added or invited to join conversations.
  - name: messages
    description: |
      The Message resource of Chat represents a single message within a Conversation.

      Posting to the Messages resource of a Conversation allows you to send messages to the Conversation via the REST API on behalf of a user.
  - name: users
    description: |
      The User resource of Chat represents a unique identity interacting with the service.
x-tagGroups:
  - name: Introduction
    tags:
      - introduction
  - name: Standard Features
    tags:
      - basics
      - authentication
  - name: Chat Service
    tags:
      - conversations
      - messages
      - users
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
responses:
  'Forbidden':
    description: Do not have appropriate permissions
    schema:
      $ref: '#/definitions/AppError'
  'Unauthorized':
    description: No access token provided
    schema:
      $ref: '#/definitions/AppError'
  'BadRequest':
    description: Invalid or missing parameters in URL or request body
    schema:
      $ref: '#/definitions/AppError'
  'NotFound':
    description: Resource not found
    schema:
      $ref: '#/definitions/AppError'
parameters:
  page:
    name: page
    in: query
    description: The page to select.
    default: 0
    type: integer
  page_size:
    name: page_size
    in: query
    description: The number of messages per page.
    default: 50
    type: integer
paths:
