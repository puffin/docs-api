  /chat/conversations:
    post:
      tags:
        - 3. conversations
      summary: Create a conversation
      description: |
        Create a new conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `missing_params` | Invalid or missing parameters in URL or request body. | 400 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |

      parameters:
        - name: conversation
          in: body
          description: The conversation to create.
          schema:
            $ref: '#/definitions/Chat-ConversationObject'
      responses:
        '201':
          description: Conversation creation successful
          schema:
            $ref: '#/definitions/Chat-Conversation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  /chat/conversations/{sid}:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string

    get:
      tags:
        - 3. conversations
      summary: Get a conversation
      description: |
        Get a single conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      responses:
        '200':
          description: Conversation retrieval successful
          schema:
            $ref: '#/definitions/Chat-Conversation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    put:
      tags:
        - 3. conversations
      summary: Update a conversation
      description: |
        Update a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `missing_params` | Invalid or missing parameters in URL or request body. | 400 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `cant_update_conversation` | Authenticated user does not have permission to update this conversation. | 403 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      parameters:
        - name: conversation
          in: body
          description: The conversation to update.
          schema:
            type: object
            properties:
              title:
                description: The conversation title.
                type: string
              objective:
                description: The conversation objective.
                type: string
              private:
                description: Conversation is private?
                type: boolean
                default: true
                enum:
                  - private
                  - public
              attributes:
                description: |
                  An optional string metadata field that can be use to store any data you wish.
                  The string value must contain structurally valid JSON if specified.
                  Note that this will always be null for resources returned via LIST GET operations,
                  but will be present for single GET.
                type: string
      responses:
        '200':
          description: Conversation update successful
          schema:
            $ref: '#/definitions/Chat-Conversation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/archive:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Archive a conversation
      description: |
        Archive a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `already_archived` | Conversation has already been archived. | 403 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      responses:
        '200':
          description: Conversation archive successful
          schema:
            $ref: '#/definitions/AppOk'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/unarchive:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Unarchive a conversation
      description: |
        Unarchive a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `not_archived` | Conversation is not archived. | 403 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      responses:
        '200':
          description: Conversation unarchive successful
          schema:
            $ref: '#/definitions/AppOk'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/invite:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Add user to conversation
      description: |
        Invite a user to a conversation.

        Valid user roles are `admin`, `member` or `guest`.

        #### Permissions
        Must have the `admin` role on the conversation to invite users to conversation with a specific
        role.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `missing_params` | Invalid or missing parameters in URL or request body. | 400 |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `user_not_found` | Value passed for `user` was invalid. | 404 |
        | `cant_invite_self` | Authenticated user cannot invite themselves to a conversation. | 403 |
        | `not_in_conversation` | Authenticated user is not in the conversation. | 403 |
        | `already_in_conversation` | Invited user is already in the conversation. | 403 |
        | `is_archived` | Conversation has been archived. | 403 |
        | `cant_invite` | User cannot be invited to this conversation. | 403 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              user_sid:
                description: The user unique identifier.
                type: string
              role:
                description: The user role for this conversation.
                type: string
                default: member
                enum:
                  - admin
                  - member
                  - guest
      responses:
        '200':
          description: Conversation member creation successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/kick:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    delete:
      tags:
        - 3. conversations
      summary: Remove user from conversation
      description: |
        Remove a user from a conversation.

        #### Permissions
        Must have the `admin` role on the conversation to remove users from conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `missing_params` | Invalid or missing parameters in URL or request body. | 400 |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `user_not_found` | Value passed for `user` was invalid. | 404 |
        | `cant_kick_self` | Authenticated user cannot kick themselves from a conversation. | 403 |
        | `not_in_conversation` | User is not in the conversation. | 403 |
        | `is_archived` | Conversation has been archived. | 403 |
        | `cant_kick` | Authenticated user can't kick User from this conversation. | 403 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              user_sid:
                description: The user unique identifier.
                type: string
      responses:
        '200':
          description: Conversation member deletion successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/join:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Join a conversation
      description: |
        User join a conversation with a persona.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `missing_params` | Invalid or missing parameters in URL or request body. | 400 |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `persona_not_found` | Value passed for `persona` was invalid. | 404 |
        | `already_in_conversation` | User is already in the conversation with a persona. | 403 |
        | `not_in_conversation` | User is not in the conversation. | 403 |
        | `is_archived` | Conversation has been archived. | 403 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              persona_sid:
                description: The persona unique identifier.
                type: string
      responses:
        '200':
          description: Conversation persona join successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/leave:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    delete:
      tags:
        - 3. conversations
      summary: Leave a conversation
      description: |
        User leave a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description | Status Code |
        | - | - | - |
        | `conversation_not_found` | Value passed for `sid` was invalid. | 404 |
        | `not_in_conversation` | User is not in the conversation. | 403 |
        | `not_authed` | No authentication token provided. | 401 |
        | `invalid_auth` | Invalid authentication token. | 401 |
        | `no_access` | Authenticated user do not have access to this resource. | 403 |
      responses:
        '200':
          description: Conversation persona leave successful
          schema:
            $ref: '#/definitions/AppOk'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
