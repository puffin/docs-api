swagger: '2.0'
info:
  version: 1.0.0
  title: Reach API Reference
  contact:
    email: dev@rea.ch
  x-logo:
    url: "http://api-docs.rea.ch/static/rea.ch-logo-black.png"
    backgroundColor: "#FFFFFF"
basePath: /v1/
host: api.rea.ch
tags:
  - name: introduction
    description: |
      The Reach Web API allows components and clients to interact with the reach ecosystem.
  - name: basics
    description: |
      All methods must be called using HTTPS. Arguments can be passed as GET or POST params, or a mix.
      The response contains a JSON object, which will always contain a top-level boolean property
      `ok`, indicating success or failure. For failure results, the `error` property will contain a
      short machine-readable error code.

      ```
      {
        "ok": true,
        "stuff": "This is good"
      }
      ```
      ```
      {
        "ok": false,
        "error": "something_bad"
      }
      ```
  - name: authentication
    description: |
      Authenticate your Web API requests by providing a bearer token, which identifies a single user.

      JSON Web Token (JWT) should be passed in all Web API calls as a parameter called `token`.

  - name: messages
    description: |
      The Message resource of Chat represents a single message within a Conversation.

      Posting to the Messages resource of a Conversation allows you to send messages to the Conversation via the REST API on behalf of a user.
x-tagGroups:
  - name: Introduction
    tags:
      - introduction
  - name: Standard Features
    tags:
      - basics
      - authentication
  - name: Chat Service
    tags:
      - messages
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
responses:
  'Forbidden':
    description: Do not have appropriate permissions
    schema:
      $ref: '#/definitions/AppError'
  'Unauthorized':
    description: No access token provided
    schema:
      $ref: '#/definitions/AppError'
  'BadRequest':
    description: Invalid or missing parameters in URL or request body
    schema:
      $ref: '#/definitions/AppError'
  'NotFound':
    description: Resource not found
    schema:
      $ref: '#/definitions/AppError'
paths:
  /chat/conversations/{conv_sid}/messages:
    get:
      tags:
        - messages
      summary: Get messages for a conversation
      description: |
        Get a list of messages in a conversation. Use the query parameters to modify the behaviour of this endpoint.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `conv_sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |

      parameters:
        - name: conv_sid
          in: path
          description: The conversation ID to get the messages for.
          required: true
          type: string
        - name: page
          in: query
          description: The page to select.
          default: 0
          type: integer
        - name: page_size
          in: query
          description: The number of messages per page.
          default: 50
          type: integer
      responses:
        '200':
          description: Message list retrieval successful
          schema:
            $ref: '#/definitions/Messages'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    post:
      tags:
        - messages
      summary: Send message to conversation
      description: |
         Send a message to a conversation.
      parameters:
        - name: conv_sid
          in: path
          description: The conversation ID to post the messages to
          required: true
          type: string
        - name: message
          in: body
          description: The message to create.
          schema:
            $ref: '#/definitions/Message'
      responses:
        '201':
          description: Message created successfully
          schema:
            $ref: '#/definitions/Message'
definitions:
  Messages:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
      messages:
        type: array
        items:
          $ref: '#/definitions/Message'
      meta:
        $ref: '#/definitions/Meta'

  Message:
    type: object
    required:
      - body
      - from
    properties:
      sid:
        description: A character string that uniquely identifies this message.
        type: string
        readOnly: true
      date_created:
        description: The timestamp that this resource was created.
        type: string
        format: date-time
        readOnly: true
      date_updated:
        description: The timestamp that this resource was updated.
        type: string
        format: date-time
        readOnly: true
      from:
        description: |
          Identity of the messageâ€™s author. If the message was created by a system,
          the value will be `system`.
        type: string
      type:
        description: The type of the message.
        type: string
        default: message
      unfurl_links:
        description: Pass `true` to enable unfurling of text-based content.
        type: boolean
        default: false
      unfurl_media:
        description: Pass `false` to disable unfurling of media content.
        type: boolean
        default: true
      was_edited:
        description: |
          `true` if the message has been updated since it was created.
          `false` if it has not changed.
        type: boolean
        default: false
        readOnly: true
      index:
        description:  The index of the message within the conversation.
        type: integer
        default: 1
        readOnly: true
      attributes:
        description: |
          An optional string metadata field that can be use to store any data you wish.
          The string value must contain structurally valid JSON if specified.
          Note that this will always be null for resources returned via LIST GET operations,
          but will be present for single GET.
        type: string
      body:
        description: The content of the message.
        type: string
      thread_sid:
        description: Provide another message's sid value to make this message a reply.
        type: string

  Meta:
    type: object
    properties:
      page:
        description: Starting page for pagination.
        type: integer
      page_size:
        description: Number of object to display for pagination.
        type: integer
      first_page_url:
        type: string
      previous_page_url:
        type: string
      url:
        type: string
      next_page_url:
        type: string
      key:
        description: the key attribute of the object where the resource content can be found.
        type: string

  AppError:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
      error:
        description: a short machine-readable error code.
        type: string
