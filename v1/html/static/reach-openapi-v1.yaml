swagger: '2.0'
info:
  version: 1.0.0
  title: Reach API Reference
  description: Reach API Specification cover all microservices and microapps endpoints.
  contact:
    email: dev@rea.ch
  x-logo:
    url: "http://api-docs.rea.ch/static/rea.ch-logo-black.png"
    backgroundColor: "#fafafa"
basePath: /v1/
host: api.rea.ch
tags:
  - name: introduction
    description: |
      The Reach Web API allows components and clients to interact with the reach ecosystem.
  - name: basics
    description: |
      All methods must be called using HTTPS. Arguments can be passed as GET or POST params, or a mix.
      The response contains a JSON object, which will always contain a top-level boolean property
      `ok`, indicating success or failure. For failure results, the `error` property will contain a
      short machine-readable error code.

      ```
      {
        "ok": true,
        "stuff": "This is good"
      }
      ```
      ```
      {
        "ok": false,
        "error": "something_bad"
      }
      ```
  - name: authentication
    description: |
      Authenticate your Web API requests by providing a bearer token, which identifies a single user.

      JSON Web Token (JWT) should be passed in all Web API calls as a parameter called `token`.

  - name: 3. conversations
    description: |
      The Conversation resource of Chat represents a "chat room" - a scope in which
      Messages can be sent and received. Users can be added or invited to join conversations.
  - name: 3. messages
    description: |
      The Message resource of Chat represents a single message within a Conversation.

      Posting to the Messages resource of a Conversation allows you to send messages to the Conversation via the REST API on behalf of a user.
  - name: 3. users
    description: |
      The User resource of Chat represents a unique identity interacting with the service.

  - name: 1. events
    description: |
      The Microapp inbox provide an interface to retrieve Inbox events.

      Inbox events are comprised of notification events, conversation events, and subject events.

  - name: 4. notifications
    description: |
      The Notification resource of the Notify service represents a notification to be sent to registered Bindings.

      Currently the following channels are supported:
      * APNS for iOS devices
      * Inbox service

  - name: 4. bindings
    description: |
      The Binding resource binds a User to its Address. Addresses are different per channel.
      For instance, for iOS push notifications the address is an APNS device token,
      and for inbox it's the User unique identifier. Creating a Binding for an Identity and Address
      allows to send notifications to an identity rather than a specific device.

  - name: 2. subjects
    description: |
      The Subject resource.
  - name: 2. users
    description: |
      The User resource of Subject represents a unique identity interacting with the service.
x-tagGroups:
  - name: Introduction
    tags:
      - introduction
  - name: Standard Features
    tags:
      - basics
      - authentication
  - name: 1. Inbox Service
    tags:
      - 1. events
  - name: 2. Subject Service
    tags:
      - 2. subjects
      - 2. users
  - name: 3. Chat Service
    tags:
      - 3. conversations
      - 3. messages
      - 3. users
  - name: 4. Notify Service
    tags:
      - 4. notifications
      - 4. bindings
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
responses:
  'Forbidden':
    description: Do not have appropriate permissions
    schema:
      $ref: '#/definitions/AppError'
  'Unauthorized':
    description: No access token provided
    schema:
      $ref: '#/definitions/AppError'
  'BadRequest':
    description: Invalid or missing parameters in URL or request body
    schema:
      $ref: '#/definitions/AppError'
  'NotFound':
    description: Resource not found
    schema:
      $ref: '#/definitions/AppError'
parameters:
  page:
    name: page
    in: query
    description: The page to select.
    default: 0
    type: integer
  page_size:
    name: page_size
    in: query
    description: The number of messages per page.
    default: 50
    type: integer
paths:
  /chat/conversations:
    post:
      tags:
        - 3. conversations
      summary: Create a conversation
      description: |
        Create a new conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |

      parameters:
        - name: conversation
          in: body
          description: The conversation to create.
          schema:
            $ref: '#/definitions/Chat-ConversationObject'
      responses:
        '201':
          description: Conversation creation successful
          schema:
            $ref: '#/definitions/Chat-Conversation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  /chat/conversations/{sid}:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string

    get:
      tags:
        - 3. conversations
      summary: Get a conversation
      description: |
        Get a single conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Conversation retrieval successful
          schema:
            $ref: '#/definitions/Chat-Conversation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    put:
      tags:
        - 3. conversations
      summary: Update a conversation
      description: |
        Update a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | cant_update_conversation | Authenticated user does not have permission to update this conversation. |
      parameters:
        - name: conversation
          in: body
          description: The conversation to update.
          schema:
            type: object
            properties:
              title:
                description: The conversation title.
                type: string
              objective:
                description: The conversation objective.
                type: string
              type:
                description: The conversation type. Either `private` or `public`.
                type: string
                default: private
                enum:
                  - private
                  - public
      responses:
        '200':
          description: Conversation update successful
          schema:
            $ref: '#/definitions/Chat-Conversation'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/archive:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Archive a conversation
      description: |
        Archive a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | already_archived | Conversation has already been archived. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Conversation archive successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/unarchive:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Unarchive a conversation
      description: |
        Unarchive a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | not_archived | Conversation is not archived. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Conversation unarchive successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/invite:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Add user to conversation
      description: |
        Invite a user to a conversation.

        Valid user roles are `admin`, `member` or `guest`.

        #### Permissions
        Must have the `admin` role on the conversation to invite users to conversation with a specific
        role.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | user_not_found | Value passed for `user` was invalid. |
        | cant_invite_self | Authenticated user cannot invite themselves to a conversation. |
        | not_in_conversation | Authenticated user is not in the conversation. |
        | already_in_conversation | Invited user is already in the conversation. |
        | is_archived | Conversation has been archived. |
        | cant_invite | User cannot be invited to this conversation. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              user_sid:
                description: The user unique identifier.
                type: string
              role:
                description: The user role for this conversation.
                type: string
                default: member
                enum:
                  - admin
                  - member
                  - guest
      responses:
        '200':
          description: Conversation member creation successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/kick:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    delete:
      tags:
        - 3. conversations
      summary: Remove user from conversation
      description: |
        Remove a user from a conversation.

        #### Permissions
        Must have the `admin` role on the conversation to remove users from conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | user_not_found | Value passed for `user` was invalid. |
        | cant_kick_self | Authenticated user cannot kick themselves from a conversation. |
        | not_in_conversation | User is not in the conversation. |
        | is_archived | Conversation has been archived. |
        | cant_invite | User cannot be invited to this conversation. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              user_sid:
                description: The user unique identifier.
                type: string
      responses:
        '200':
          description: Conversation member deletion successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/join:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    post:
      tags:
        - 3. conversations
      summary: Join a conversation
      description: |
        User join a conversation with a persona.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | persona_not_found | Value passed for `persona` was invalid. |
        | already_in_conversation | User is already in the conversation with a persona. |
        | not_in_conversation | User is not in the conversation. |
        | is_archived | Conversation has been archived. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              persona_sid:
                description: The persona unique identifier.
                type: string
      responses:
        '200':
          description: Conversation persona join successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/conversations/{sid}/leave:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this conversation.
        required: true
        type: string
    delete:
      tags:
        - 3. conversations
      summary: Leave a conversation
      description: |
        User leave a conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `sid` was invalid. |
        | not_in_conversation | User is not in the conversation. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Conversation persona leave successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
  /chat/conversations/{conv_sid}/messages:
    parameters:
      - name: conv_sid
        in: path
        description: The conversation ID to get the messages for.
        required: true
        type: string
    get:
      tags:
        - 3. messages
      summary: Get messages for a conversation
      description: |
        Get a list of messages in a conversation. Use the query parameters to modify the behaviour of this endpoint.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `conv_sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: Message list retrieval successful
          schema:
            $ref: '#/definitions/Chat-Messages'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/messages:
    post:
      tags:
        - 3. messages
      summary: Create a message
      description: |
        Create a new message in a conversation. To create the message as a response to another message, provide `thread_id`.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `conv_sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | not_in_conversation | Cannot post user messages to a conversation they are not in. |
        | is_archived | Conversation has been archived. |
        | msg_too_long | Message body is too long. |
        | no_text | No message text provided. |

      parameters:
        - name: message
          in: body
          description: The message to create.
          schema:
            $ref: '#/definitions/Chat-MessageObject'
      responses:
        '201':
          description: Message creation successful
          schema:
            $ref: '#/definitions/Chat-Message'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/messages/{sid}:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this message.
        required: true
        type: string

    get:
      tags:
        - 3. messages
      summary: Get a message
      description: |
        Get a single message.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | message_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Message retrieval successful
          schema:
            $ref: '#/definitions/Chat-Message'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    put:
      tags:
        - 3. messages
      summary: Update a message
      description: |
        Update a message.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `conv_sid` was invalid. |
        | message_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | cant_update_message | Authenticated user does not have permission to update this message. |
        | msg_too_long | Message body is too long. |
        | no_text | No message text provided. |
      parameters:
        - name: message
          in: body
          description: The message to update.
          schema:
            type: object
            properties:
              unfurl_links:
                description: Pass `true` to enable unfurling of text-based content.
                type: boolean
                default: false
              unfurl_media:
                description: Pass `false` to disable unfurling of media content.
                type: boolean
                default: true
              attributes:
                description: |
                  An optional string metadata field that can be use to store any data you wish.
                  The string value must contain structurally valid JSON if specified.
                  Note that this will always be null for resources returned via LIST GET operations,
                  but will be present for single GET.
                type: string
              body:
                description: The content of the message.
                type: string
              thread_sid:
                description: Provide another message's sid value to make this message a reply.
                type: string
      responses:
        '200':
          description: Message update successful
          schema:
            $ref: '#/definitions/Chat-Message'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    delete:
      tags:
        - 3. messages
      summary: Delete a message
      description: |
        Delete a message.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | message_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | cant_delete_message | Authenticated user does not have permission to delete this message. |
      responses:
        '200':
          description: Message deletion successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/messages/{sid}/thread:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this message.
        required: true
        type: string

    get:
      tags:
        - 3. messages
      summary: Get a thread
      description: |
        Get a list of messages in a thread. Use the query parameters to modify the behaviour of this endpoint.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | message_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: Message list retrieval successful
          schema:
            $ref: '#/definitions/Chat-Messages'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
  /chat/users:
    get:
      tags:
        - 3. users
      summary: Get users
      description: |
        Get a list of users. Based on query string parameters, select users from
        a conversation, or select users not in a specific conversation.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `in_conv` or `not_in_conv` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - name: in_conv
          in: query
          description: The conversation ID to get users for.
          type: string
        - name: not_in_conv
          in: query
          description: The conversation ID to exclude users for.
          type: string
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: User list retrieval successful
          schema:
            $ref: '#/definitions/Chat-Users'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/users/{sid}:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this user.
        required: true
        type: string
    get:
      tags:
        - 3. users
      summary: Get a user
      description: |
        Get a single user.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user` was invalid. |
        | user_not_visible | The requested user is not visible to the calling user. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: User retrieval successful
          schema:
            $ref: '#/definitions/Chat-User'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/users/ids:
    get:
      tags:
        - 3. users
      summary: Get users by ids
      description: |
        Get a list of users based on a provided list of user ids.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | conversation_not_found | Value passed for `in_conv` or `not_in_conv` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - in: body
          name: body
          description: List of user sids
          required: true
          schema:
            type: array
            items:
              type: string
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: User list retrieval successful
          schema:
            $ref: '#/definitions/Chat-Users'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /chat/users/{sid}/conversations:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this user.
        required: true
        type: string
    get:
      tags:
        - 3. users
      summary: Get conversations for user
      description: |
        Get all the conversations for a user.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - name: sort
          in: query
          description: Represents the sort operation to be applied when working with the result sets.
          type: string
          default: latest-message
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: Conversation list retrieval successful
          schema:
            $ref: '#/definitions/Chat-Conversations'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
  /subject/subjects:
    post:
      tags:
        - 2. subjects
      summary: Create a subject
      description: |
        Create a new subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |

      parameters:
        - name: subject
          in: body
          description: The subject to create.
          schema:
            $ref: '#/definitions/Subject-SubjectObject'
      responses:
        '201':
          description: Subject creation successful
          schema:
            $ref: '#/definitions/Subject-Subject'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'

  /subject/subjects/{sid}:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string

    get:
      tags:
        - 2. subjects
      summary: Get a subject
      description: |
        Get a single subject.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Subject retrieval successful
          schema:
            $ref: '#/definitions/Subject-Subject'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /subject/subjects/{sid}/invite:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this subject.
        required: true
        type: string
    post:
      tags:
        - 2. subjects
      summary: Add user to subject
      description: |
        Invite a user to a subject.

        Valid user roles are `admin` or `member`.

        #### Permissions
        Must have the `admin` role on the subject to invite users to subject with a specific
        role.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | subject_not_found | Value passed for `sid` was invalid. |
        | user_not_found | Value passed for `user` was invalid. |
        | cant_invite_self | Authenticated user cannot invite themselves to a subject. |
        | not_in_subject | Authenticated user is not in the subject. |
        | already_in_subjecrt | Invited user is already in the subject. |
        | cant_invite | User cannot be invited to this subject. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              user_sid:
                description: The user unique identifier.
                type: string
              role:
                description: The user role for this subject.
                type: string
                default: member
                enum:
                  - admin
                  - member
                  - guest
      responses:
        '200':
          description: Subject member creation successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
  /subject/users/{sid}/subjects:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this user.
        required: true
        type: string
    get:
      tags:
        - 2. users
      summary: Get subjects for user
      description: |
        Get all the subjects for a user.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: Subject list retrieval successful
          schema:
            $ref: '#/definitions/Subject-Subjects'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
  /inbox/events:
    parameters:
      - in: body
        name: body
        required: true
        schema:
          type: object
          required:
            - user_sid
          properties:
            user_sid:
              type: string
              description: The user ID to get the events for.
    get:
      tags:
        - 1. events
      summary: Get events for a user
      description: |
        Get a list of events in a user inbox. Use the query parameters to modify the behaviour of this endpoint.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user_sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: Event list retrieval successful
          schema:
            $ref: '#/definitions/Inbox-Events'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
  /notify/notications:
    get:
      tags:
        - 4. notifications
      summary: Get user notifications
      description: |
        Get a list of notifications for a user. Use the query parameters to modify the behaviour of this endpoint.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user_sid` was invalid. |
        | channel_not_supported | Value passed for `channel` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - user_sid
            properties:
              user_sid:
                type: string
                description: The user ID to get the notifications for.
              channel:
                type: string
                description: The channel of notifications to retrieve.
                default: all
                enum:
                  - all
                  - apn
                  - inbox
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: Notication list retrieval successful
          schema:
            $ref: '#/definitions/Notify-Notifications'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    post:
      tags:
        - 4. notifications
      summary: Send a notification
      description: |
        Notifications can be channel specific to take full advantage of channel specific
        features or to customize content for each channel.

        Channel specific payload of a notification can be provided by adding a parameter
        where the name is the channel type (apn or inbox) and the value is the channel
        specific payload in a json object.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user_sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | msg_too_long | Notification body is too long. |
        | no_text | No body text provided. |

      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref:  '#/definitions/Notify-NotificationObject'

      responses:
        '201':
          description: Notification creation successful
          schema:
            $ref: '#/definitions/Notify-Notification'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
  /notify/bindings:
    get:
      tags:
        - 4. bindings
      summary: Get user bindings
      description: |
        Get a list of bindings for a user. Use the query parameters to modify the behaviour of this endpoint.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user_sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | invalid_page | Value passed for `page` was invalid |
        | invalid_page_size | Value passed for `page_size` was invalid |
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - user_sid
            properties:
              user_sid:
                type: string
                description: The user ID to get the bindings for.
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/page_size"
      responses:
        '200':
          description: Binding list retrieval successful
          schema:
            $ref: '#/definitions/Notify-Bindings'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    post:
      tags:
        - 4. bindings
      summary: Create a binding
      description: |
        Creating a Binding with the same `address` as that of an existing Binding will replace
        the existing Binding with the new one. In order to avoid such leaking when creating
        a new Binding, we remove any previous Binding with the same `address`.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | user_not_found | Value passed for `user_sid` was invalid. |
        | address_missing | No address provided. |
        | invalid_binding_type | Invalid binding type. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |

      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref:  '#/definitions/Notify-BindingObject'

      responses:
        '201':
          description: Binding creation successful
          schema:
            $ref: '#/definitions/Notify-Binding'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

  /notify/bindings/{sid}:
    parameters:
      - name: sid
        in: path
        description: A character string that uniquely identifies this binding.
        required: true
        type: string

    get:
      tags:
        - 4. bindings
      summary: Retrieve a binding
      description: |
        Get a single binding.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | binding_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
      responses:
        '200':
          description: Binding retrieval successful
          schema:
            $ref: '#/definitions/Notify-Binding'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'

    delete:
      tags:
        - 4. bindings
      summary: Delete a binding
      description: |
        Delete a binding.

        #### Errors

        This table lists the expected errors that this method could return. However, other
        errors can be returned in the case where the service is down or other unexpected
        factors affect processing. Callers should always check the value of the `ok` params in the response.

        | Error | Description |
        | - | - |
        | binding_not_found | Value passed for `sid` was invalid. |
        | not_authed | No authentication token provided. |
        | invalid_auth | Invalid authentication token. |
        | cant_delete_binding | Authenticated user does not have permission to delete this binding. |
      responses:
        '200':
          description: Binding deletion successful
          schema:
            $ref: '#/definitions/AppOk'
        '400':
          $ref: '#/responses/BadRequest'
        '401':
          $ref: '#/responses/Unauthorized'
        '403':
          $ref: '#/responses/Forbidden'
        '404':
          $ref: '#/responses/NotFound'
definitions:
  Meta:
    type: object
    properties:
      page:
        description: Starting page for pagination.
        type: integer
      page_size:
        description: Number of object to display for pagination.
        type: integer
      first_page_url:
        type: string
      previous_page_url:
        type: string
      url:
        type: string
      next_page_url:
        type: string
      key:
        description: the key attribute of the object where the resource content can be found.
        type: string

  AppOk:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true

  AppError:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: false
      error:
        description: a short machine-readable error code.
        type: string
  Chat-Messages:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      messages:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Chat-MessageObject'
      meta:
        $ref: '#/definitions/Meta'

  Chat-Message:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      message:
        type: object
        $ref: '#/definitions/Chat-MessageObject'

  Chat-MessageObject:
    type: object
    required:
      - body
      - from
      - to
    properties:
      sid:
        description: A character string that uniquely identifies this message.
        type: string
        readOnly: true
      date_created:
        description: The timestamp that this resource was created.
        type: string
        format: date-time
        readOnly: true
      date_updated:
        description: The timestamp that this resource was updated.
        type: string
        format: date-time
        readOnly: true
      from:
        description: |
          Identity of the message’s author. If the message was created by a system,
          the value will be `system`.
        type: string
      to:
        description: The unique id of the conversation this message is sent to.
        type: string
      type:
        description: The type of the message.
        type: string
        default: message
        enum:
          - message
          - event
          - ad
      unfurl_links:
        description: Pass `true` to enable unfurling of text-based content.
        type: boolean
        default: false
      unfurl_media:
        description: Pass `false` to disable unfurling of media content.
        type: boolean
        default: true
      was_edited:
        description: |
          `true` if the message has been updated since it was created.
          `false` if it has not changed.
        type: boolean
        default: false
        readOnly: true
      index:
        description:  The index of the message within the conversation.
        type: integer
        default: 1
        readOnly: true
      attributes:
        description: |
          An optional string metadata field that can be use to store any data you wish.
          The string value must contain structurally valid JSON if specified.
          Note that this will always be null for resources returned via LIST GET operations,
          but will be present for single GET.
        type: string
      body:
        description: The content of the message.
        type: string
      thread_sid:
        description: Provide another message's sid value to make this message a reply.
        type: string

  Chat-Conversations:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      conversations:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Chat-ConversationObject'
      meta:
        $ref: '#/definitions/Meta'

  Chat-Conversation:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      conversation:
        type: object
        $ref: '#/definitions/Chat-ConversationObject'

  Chat-ConversationObject:
    type: object
    required:
      - title
    properties:
      sid:
        description: A character string that uniquely identifies this conversation.
        type: string
        readOnly: true
      date_created:
        description: The timestamp that this resource was created.
        type: string
        format: date-time
        readOnly: true
      date_updated:
        description: The timestamp that this resource was updated.
        type: string
        format: date-time
        readOnly: true
      date_archived:
        description: The timestamp that this resource was archived.
        type: string
        format: date-time
        readOnly: true
      created_by:
        description: |
          Identity of the conversation's creator. If the conversation was created by a
          system, the value will be `system`.
        type: string
        readOnly: true
      attributes:
        description: |
          An optional string metadata field that can be use to store any data you wish.
          The string value must contain structurally valid JSON if specified.
          Note that this will always be null for resources returned via LIST GET operations,
          but will be present for single GET.
        type: string
      title:
        description: The conversation title.
        type: string
      objective:
        description: The conversation objective.
        type: string
      type:
        description: The conversation type. Either `private` or `public`.
        type: string
        default: private
        enum:
          - private
          - public
      users:
        description: List of user sids that have access to this conversation.
        type: array
        items:
          type: string
        readOnly: true
      participants:
        description: List of users that participate in this conversation with a persona.
        type: array
        items:
          type: object
          properties:
            user_sid:
              type: string
              description: A character string that uniquely identifies the user.
            persona:
              type: object
              $ref: '#/definitions/Chat-PersonaObject'
        readOnly: true
      latest:
        description: The latest message sid in the conversation.
        type: string
        readOnly: true

  Chat-Users:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      users:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Chat-UserObject'
      meta:
        $ref: '#/definitions/Meta'

  Chat-User:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      user:
        type: object
        $ref: '#/definitions/Chat-UserObject'

  Chat-UserObject:
    allOf:
    - $ref:  '#/definitions/Chat-UserBaseObject'
    - type: object
      properties:
        personas:
          type: array
          items:
            $ref: '#/definitions/Chat-PersonaObject'

  Chat-UserBaseObject:
    type: object
    properties:
      sid:
        description: A character string that uniquely identifies this user.
        type: string
        readOnly: true
      username:
        description: The username of a user.
        type: string
        readOnly: true
      full_name:
        description: The user full name.
        type: string
        readOnly: true
      avatar:
        description: URL to the user avatar picture.
        type: string
        readOnly: true
      attributes:
        description: |
          An optional string metadata field that can be use to store any data you wish.
          The string value must contain structurally valid JSON if specified.
          Note that this will always be null for resources returned via LIST GET operations,
          but will be present for single GET.
        type: string

  Chat-PersonaObject:
    type: object
    properties:
      sid:
        description: A character string that uniquely identifies this persona.
        type: string
        readOnly: true
      name:
        description: The name of the persona.
        type: string
  Subject-Subjects:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      subjects:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Subject-SubjectObject'
      meta:
        $ref: '#/definitions/Meta'

  Subject-Subject:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      subject:
        type: object
        $ref: '#/definitions/Subject-SubjectObject'

  Subject-SubjectObject:
    type: object
    required:
      - title
    properties:
      sid:
        description: A character string that uniquely identifies this subject.
        type: string
        readOnly: true
      date_created:
        description: The timestamp that this resource was created.
        type: string
        format: date-time
        readOnly: true
      date_updated:
        description: The timestamp that this resource was updated.
        type: string
        format: date-time
        readOnly: true
      created_by:
        description: |
          Identity of the subject's creator. If the subject was created by a
          system, the value will be `system`.
        type: string
        readOnly: true
      attributes:
        description: |
          An optional string metadata field that can be use to store any data you wish.
          The string value must contain structurally valid JSON if specified.
          Note that this will always be null for resources returned via LIST GET operations,
          but will be present for single GET.
        type: string
      name:
        description: The subject name.
        type: string
      description:
        description: The subject description.
        type: string
      users:
        description: List of user sids that have access to this subject.
        type: array
        items:
          type: string
        readOnly: true
  Inbox-Events:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      events:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Inbox-EventObject'
      meta:
        $ref: '#/definitions/Meta'

  Inbox-EventObject:
    type: object
    properties:
      sid:
        description: A character string that uniquely identifies this event.
        type: string
        readOnly: true
      date_created:
        description: The timestamp that this resource was created.
        type: string
        format: date-time
        readOnly: true
      type:
        type: string
        enum:
          - notification
          - conversation
          - subject
        readOnly: true
      object:
        description: An event associated object. Can be a `notification`, `conversation` or `subject`
        type: object
        readOnly: true
  Notify-Notifications:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      notications:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Notify-NotificationObject'
      meta:
        $ref: '#/definitions/Meta'

  Notify-Notification:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      notication:
        type: object
        $ref: '#/definitions/Notify-NotificationObject'

  Notify-NotificationObject:
    type: object
    properties:
      sid:
        description: A character string that uniquely identifies this notification.
        type: string
        readOnly: true
      user_sid:
        description: A character string that uniquely identifies the user.
        type: string
      date_created:
        description: The timestamp that this resource was created.
        type: string
        format: date-time
        readOnly: true
      title:
        description: The title of the notification.
        type: string
      body:
        description: The content of the notification.
        type: string
      channel:
        type: string
        description: The channel of the notification.
        default: all
        enum:
          - all
          - apn
          - inbox
      action:
        type: string
        description: Specifies the actions to be displayed for the notification.
        default: none
        enum:
          - none
          - invite
      apn:
        type: string
        description: |
          APNS specific payload that overrides corresponding attributes in a generic payload.

          This value is mapped to the Payload item, therefore the aps key has to be used
          to change standard attributes. Adds custom key-value pairs to the root of
          the dictionary. Refer to [APNS documentation](https://developer.apple.com/library/content/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/Chapters/ApplePushService.html) for more details.
        default: null
      inbox:
        type: string
        description: |
          Inbox specific payload that overrides corresponding attributes in generic payload.
        default: null

  Notify-Bindings:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      bindings:
        type: array
        uniqueItems: true
        items:
          $ref: '#/definitions/Notify-BindingObject'
      meta:
        $ref: '#/definitions/Meta'

  Notify-Binding:
    type: object
    properties:
      ok:
        description: Indicating success or failure.
        type: boolean
        default: true
      binding:
        type: object
        $ref: '#/definitions/Notify-BindingObject'

  Notify-BindingObject:
    type: object
    properties:
      sid:
        description: A character string that uniquely identifies this binding.
        type: string
        readOnly: true
      date_created:
        description: The timestamp that this resource was created.
        type: string
        format: date-time
        readOnly: true
      date_updated:
        description: The timestamp that this resource was updated.
        type: string
        format: date-time
        readOnly: true
      user_sid:
        description: A character string that uniquely identifies the user.
        type: string
      type:
        description: The type of the binding. This determines the transport technology to use.
        type: string
        default: inbox
        enum:
          - apn
          - inbox
      address:
        description: |
          The address specific to the channel. For APNS it is the device token.
          For Inbox it is the User unique identifier.
        type: string
